components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    login:
      type: object
      properties:
        username:
          type: string
          example: admin
        password:
          type: string
          example: admin
    createUser:
      type: object
      properties:
        username:
          type: string
          example: admin
        password:
          type: string
          example: admin
    updateUser:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 16763be4-6022-406e-a950-fcd5018633ca
        username:
          type: string
          example: admin
        password:
          type: string
          example: admin
        oldPassword:
          type: string
          example: admin
  responses:
    loginOk:
      type: object
      properties:
        id:
          type: string
          example: 16763be4-6022-406e-a950-fcd5018633ca
        username:
          type: string
          example: admin
        login:
          type: boolean
          example: true
        token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
    generalError:
      type: object
      properties:
        message:
          type: string
          description: Descripci√≥n del error
    createNewUser:
      type: object
      properties:
        id:
          type: string
          example: 16763be4-6022-406e-a950-fcd5018633ca
        username:
          type: string
          example: admin
        password:
          type: string
          example: admin
        # updatedAt:
        #   type: string
        #   format: "date-time"
        #   example: "2024-02-11T18:50:49.964Z"
        # createdAt:
        #   type: string
        #   format: "date-time"
        #   example: "2024-02-11T18:50:49.964Z"
    userInfo:
      type: object
      properties:
        id:
          type: string
          example: 16763be4-6022-406e-a950-fcd5018633ca
        username:
          type: string
          example: admin
paths:
  /api/users/login:
    post:
      summary: Ruta para hacer el login de usuario
      tags:
        - Users
      requestBody:
        required: true
        description: Datos requeridos para hacer login
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/login"
      responses:
        "200":
          description: Me muestra el objeto con la informacion de login
          content:
            application/json:
              schema:
                $ref: "#/components/responses/loginOk"
        "500":
          description: Error general del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/responses/generalError"

  /api/users/:
    get:
      summary: Ruta que trae todos los usuarios en la base de datos
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Se entrega la informacion de todos los usuarios
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/responses/userInfo"
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/responses/generalError"
        "500":
          description: Error general del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/responses/generalError"
    post:
      summary: Ruta en la cual se crea usuario nuevo
      tags:
        - Users
      security:
        - bearerAuth: []
      requestBody:
        required: true
        description: Datos requeridos para crear un usuario
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createUser"
      responses:
        "201":
          description: Me muestra el objeto con la informacion de usuario creado recientemente
          content:
            application/json:
              schema:
                $ref: "#/components/responses/createNewUser"
        "400":
          description: Datos de Ingreso incorrectos
          content:
            application/json:
              schema:
                $ref: "#/components/responses/generalError"
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/responses/generalError"
        "500":
          description: Error general del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/responses/generalError"
    put:
      summary: Ruta en la cual se actualiza al usuario existente
      tags:
        - Users
      security:
        - bearerAuth: []
      requestBody:
        required: true
        description: Datos requeridos para actualizar un usuario
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/updateUser"
      responses:
        "200":
          description: Me muestra el objeto con la informacion de usuario actualizado recientemente
          content:
            application/json:
              schema:
                $ref: "#/components/responses/createNewUser"
        "400":
          description: Datos de Ingreso incorrectos
          content:
            application/json:
              schema:
                $ref: "#/components/responses/generalError"
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/responses/generalError"
        "500":
          description: Error general del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/responses/generalError"

  /api/users/{userId}:
    delete:
      summary: Elimina el usuario que se pasa por parametro
      tags:
        - Users
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          type: string
          required: true
          description: Es el id tipo UUID del usuario
      responses:
        "200":
          description: Me muestra el objeto con la informacion de usuario actualizado recientemente
          content:
            application/json:
              schema:
                $ref: "#/components/responses/generalError"
        "400":
          description: Datos de Ingreso incorrectos
          content:
            application/json:
              schema:
                $ref: "#/components/responses/generalError"
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/responses/generalError"
        "500":
          description: Error general del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/responses/generalError"
